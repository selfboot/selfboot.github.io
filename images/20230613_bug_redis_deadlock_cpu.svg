<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="374" onload="init(evt)" viewBox="0 0 1200 374" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="374.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="357" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="357" > </text>
<g id="frames">
<g >
<title>zfree (162 samples, 0.44%)</title><rect x="182.9" y="133" width="5.1" height="15.0" fill="rgb(239,146,17)" rx="2" ry="2" />
<text  x="185.90" y="143.5" ></text>
</g>
<g >
<title>enterExecutionUnit (9 samples, 0.02%)</title><rect x="135.3" y="181" width="0.3" height="15.0" fill="rgb(237,110,30)" rx="2" ry="2" />
<text  x="138.32" y="191.5" ></text>
</g>
<g >
<title>zmalloc (162 samples, 0.44%)</title><rect x="948.5" y="101" width="5.1" height="15.0" fill="rgb(249,191,33)" rx="2" ry="2" />
<text  x="951.45" y="111.5" ></text>
</g>
<g >
<title>intrev64 (12 samples, 0.03%)</title><rect x="688.7" y="85" width="0.4" height="15.0" fill="rgb(254,75,32)" rx="2" ry="2" />
<text  x="691.71" y="95.5" ></text>
</g>
<g >
<title>__memcpy_avx_unaligned (23 samples, 0.06%)</title><rect x="855.1" y="69" width="0.7" height="15.0" fill="rgb(212,6,6)" rx="2" ry="2" />
<text  x="858.09" y="79.5" ></text>
</g>
<g >
<title>raxSeekGreatest (62 samples, 0.17%)</title><rect x="863.0" y="101" width="2.0" height="15.0" fill="rgb(254,133,15)" rx="2" ry="2" />
<text  x="866.04" y="111.5" ></text>
</g>
<g >
<title>zrealloc (296 samples, 0.80%)</title><rect x="1130.4" y="101" width="9.4" height="15.0" fill="rgb(237,90,8)" rx="2" ry="2" />
<text  x="1133.38" y="111.5" ></text>
</g>
<g >
<title>raxIteratorAddChars.constprop.0 (57 samples, 0.15%)</title><rect x="861.2" y="69" width="1.8" height="15.0" fill="rgb(225,25,29)" rx="2" ry="2" />
<text  x="864.23" y="79.5" ></text>
</g>
<g >
<title>decrRefCount (15 samples, 0.04%)</title><rect x="635.8" y="53" width="0.5" height="15.0" fill="rgb(222,122,13)" rx="2" ry="2" />
<text  x="638.85" y="63.5" ></text>
</g>
<g >
<title>expireIfNeeded (57 samples, 0.15%)</title><rect x="709.8" y="101" width="1.8" height="15.0" fill="rgb(238,149,27)" rx="2" ry="2" />
<text  x="712.83" y="111.5" ></text>
</g>
<g >
<title>unblockClient (8 samples, 0.02%)</title><rect x="1178.2" y="181" width="0.2" height="15.0" fill="rgb(223,196,31)" rx="2" ry="2" />
<text  x="1181.15" y="191.5" ></text>
</g>
<g >
<title>dictFetchValue (711 samples, 1.91%)</title><rect x="972.6" y="149" width="22.6" height="15.0" fill="rgb(233,102,2)" rx="2" ry="2" />
<text  x="975.63" y="159.5" >d..</text>
</g>
<g >
<title>connSocketEventHandler (32,987 samples, 88.80%)</title><rect x="130.6" y="245" width="1047.8" height="15.0" fill="rgb(230,198,4)" rx="2" ry="2" />
<text  x="133.55" y="255.5" >connSocketEventHandler</text>
</g>
<g >
<title>getTimeoutFromObjectOrReply (324 samples, 0.87%)</title><rect x="717.1" y="101" width="10.3" height="15.0" fill="rgb(217,104,30)" rx="2" ry="2" />
<text  x="720.10" y="111.5" ></text>
</g>
<g >
<title>__memcpy_avx_unaligned_erms (80 samples, 0.22%)</title><rect x="1029.3" y="133" width="2.5" height="15.0" fill="rgb(254,58,10)" rx="2" ry="2" />
<text  x="1032.30" y="143.5" ></text>
</g>
<g >
<title>xreadCommand (27 samples, 0.07%)</title><rect x="960.3" y="133" width="0.9" height="15.0" fill="rgb(206,20,49)" rx="2" ry="2" />
<text  x="963.30" y="143.5" ></text>
</g>
<g >
<title>je_realloc (82 samples, 0.22%)</title><rect x="1187.2" y="293" width="2.6" height="15.0" fill="rgb(222,226,40)" rx="2" ry="2" />
<text  x="1190.24" y="303.5" ></text>
</g>
<g >
<title>raxRemoveChild (675 samples, 1.82%)</title><rect x="1118.3" y="117" width="21.5" height="15.0" fill="rgb(244,227,50)" rx="2" ry="2" />
<text  x="1121.34" y="127.5" >r..</text>
</g>
<g >
<title>zmalloc (171 samples, 0.46%)</title><rect x="561.0" y="37" width="5.4" height="15.0" fill="rgb(249,67,19)" rx="2" ry="2" />
<text  x="564.01" y="47.5" ></text>
</g>
<g >
<title>dictGenHashFunction (9 samples, 0.02%)</title><rect x="246.8" y="149" width="0.3" height="15.0" fill="rgb(232,93,14)" rx="2" ry="2" />
<text  x="249.78" y="159.5" ></text>
</g>
<g >
<title>lookupKeyRead (8 samples, 0.02%)</title><rect x="385.8" y="117" width="0.2" height="15.0" fill="rgb(251,154,7)" rx="2" ry="2" />
<text  x="388.79" y="127.5" ></text>
</g>
<g >
<title>zmalloc (35 samples, 0.09%)</title><rect x="600.1" y="69" width="1.1" height="15.0" fill="rgb(214,198,23)" rx="2" ry="2" />
<text  x="603.11" y="79.5" ></text>
</g>
<g >
<title>dictEncObjKeyCompare (404 samples, 1.09%)</title><rect x="206.9" y="149" width="12.8" height="15.0" fill="rgb(214,84,29)" rx="2" ry="2" />
<text  x="209.92" y="159.5" ></text>
</g>
<g >
<title>raxSeek (21 samples, 0.06%)</title><rect x="389.0" y="117" width="0.7" height="15.0" fill="rgb(213,225,17)" rx="2" ry="2" />
<text  x="392.03" y="127.5" ></text>
</g>
<g >
<title>dictFind (589 samples, 1.59%)</title><rect x="995.2" y="149" width="18.7" height="15.0" fill="rgb(206,11,43)" rx="2" ry="2" />
<text  x="998.21" y="159.5" ></text>
</g>
<g >
<title>raxCompressNode (1,165 samples, 3.14%)</title><rect x="539.3" y="53" width="37.1" height="15.0" fill="rgb(228,22,22)" rx="2" ry="2" />
<text  x="542.34" y="63.5" >rax..</text>
</g>
<g >
<title>dictGetVal (27 samples, 0.07%)</title><rect x="706.3" y="101" width="0.8" height="15.0" fill="rgb(208,139,28)" rx="2" ry="2" />
<text  x="709.27" y="111.5" ></text>
</g>
<g >
<title>__memcpy_avx_unaligned_erms (32 samples, 0.09%)</title><rect x="445.7" y="69" width="1.0" height="15.0" fill="rgb(240,125,26)" rx="2" ry="2" />
<text  x="448.67" y="79.5" ></text>
</g>
<g >
<title>dictVanillaFree (7 samples, 0.02%)</title><rect x="178.8" y="133" width="0.3" height="15.0" fill="rgb(238,115,2)" rx="2" ry="2" />
<text  x="181.83" y="143.5" ></text>
</g>
<g >
<title>string2ll.part.0 (33 samples, 0.09%)</title><rect x="943.2" y="101" width="1.1" height="15.0" fill="rgb(229,80,3)" rx="2" ry="2" />
<text  x="946.21" y="111.5" ></text>
</g>
<g >
<title>getLongLongFromObjectOrReply (172 samples, 0.46%)</title><rect x="711.6" y="101" width="5.5" height="15.0" fill="rgb(236,112,19)" rx="2" ry="2" />
<text  x="714.64" y="111.5" ></text>
</g>
<g >
<title>je_malloc (75 samples, 0.20%)</title><rect x="690.7" y="69" width="2.4" height="15.0" fill="rgb(232,9,47)" rx="2" ry="2" />
<text  x="693.74" y="79.5" ></text>
</g>
<g >
<title>updateClientMemUsageAndBucket (11 samples, 0.03%)</title><rect x="1174.5" y="165" width="0.3" height="15.0" fill="rgb(216,60,48)" rx="2" ry="2" />
<text  x="1177.47" y="175.5" ></text>
</g>
<g >
<title>dictSdsHash (90 samples, 0.24%)</title><rect x="247.1" y="149" width="2.8" height="15.0" fill="rgb(207,180,42)" rx="2" ry="2" />
<text  x="250.07" y="159.5" ></text>
</g>
<g >
<title>redis-server (37,147 samples, 100.00%)</title><rect x="10.0" y="309" width="1180.0" height="15.0" fill="rgb(223,95,16)" rx="2" ry="2" />
<text  x="13.00" y="319.5" >redis-server</text>
</g>
<g >
<title>checkGoodReplicasStatus (20 samples, 0.05%)</title><rect x="283.6" y="149" width="0.6" height="15.0" fill="rgb(212,213,7)" rx="2" ry="2" />
<text  x="286.60" y="159.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (91 samples, 0.24%)</title><rect x="632.9" y="53" width="2.9" height="15.0" fill="rgb(249,33,36)" rx="2" ry="2" />
<text  x="635.93" y="63.5" ></text>
</g>
<g >
<title>xreadCommand (17,669 samples, 47.57%)</title><rect x="392.3" y="117" width="561.3" height="15.0" fill="rgb(239,195,24)" rx="2" ry="2" />
<text  x="395.33" y="127.5" >xreadCommand</text>
</g>
<g >
<title>blockForKeys (16 samples, 0.04%)</title><rect x="382.6" y="117" width="0.5" height="15.0" fill="rgb(213,125,1)" rx="2" ry="2" />
<text  x="385.61" y="127.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (40 samples, 0.11%)</title><rect x="245.3" y="133" width="1.3" height="15.0" fill="rgb(207,192,54)" rx="2" ry="2" />
<text  x="248.29" y="143.5" ></text>
</g>
<g >
<title>dictIncrUnsignedIntegerVal (65 samples, 0.17%)</title><rect x="707.1" y="101" width="2.1" height="15.0" fill="rgb(205,103,50)" rx="2" ry="2" />
<text  x="710.13" y="111.5" ></text>
</g>
<g >
<title>raxRemove (6 samples, 0.02%)</title><rect x="1027.0" y="149" width="0.2" height="15.0" fill="rgb(218,74,23)" rx="2" ry="2" />
<text  x="1030.04" y="159.5" ></text>
</g>
<g >
<title>getLongLongFromObjectOrReply (6 samples, 0.02%)</title><rect x="383.8" y="117" width="0.1" height="15.0" fill="rgb(237,141,20)" rx="2" ry="2" />
<text  x="386.76" y="127.5" ></text>
</g>
<g >
<title>dictEncObjHash (99 samples, 0.27%)</title><rect x="145.3" y="149" width="3.2" height="15.0" fill="rgb(235,90,51)" rx="2" ry="2" />
<text  x="148.32" y="159.5" ></text>
</g>
<g >
<title>zfree (93 samples, 0.25%)</title><rect x="1171.2" y="133" width="2.9" height="15.0" fill="rgb(205,28,50)" rx="2" ry="2" />
<text  x="1174.19" y="143.5" ></text>
</g>
<g >
<title>zfree (156 samples, 0.42%)</title><rect x="576.4" y="53" width="4.9" height="15.0" fill="rgb(205,62,53)" rx="2" ry="2" />
<text  x="579.35" y="63.5" ></text>
</g>
<g >
<title>raxPrev (21 samples, 0.06%)</title><rect x="941.9" y="85" width="0.7" height="15.0" fill="rgb(228,226,47)" rx="2" ry="2" />
<text  x="944.94" y="95.5" ></text>
</g>
<g >
<title>dictFind (266 samples, 0.72%)</title><rect x="973.2" y="133" width="8.5" height="15.0" fill="rgb(240,57,52)" rx="2" ry="2" />
<text  x="976.23" y="143.5" ></text>
</g>
<g >
<title>dictGenHashFunction (31 samples, 0.08%)</title><rect x="647.7" y="69" width="1.0" height="15.0" fill="rgb(247,92,49)" rx="2" ry="2" />
<text  x="650.73" y="79.5" ></text>
</g>
<g >
<title>addClientToTimeoutTable (4,933 samples, 13.28%)</title><rect x="444.5" y="85" width="156.7" height="15.0" fill="rgb(225,119,38)" rx="2" ry="2" />
<text  x="447.52" y="95.5" >addClientToTimeoutTa..</text>
</g>
<g >
<title>do_rallocx (52 samples, 0.14%)</title><rect x="513.7" y="37" width="1.7" height="15.0" fill="rgb(218,107,13)" rx="2" ry="2" />
<text  x="516.71" y="47.5" ></text>
</g>
<g >
<title>__memcpy_avx_unaligned_erms (70 samples, 0.19%)</title><rect x="855.8" y="69" width="2.2" height="15.0" fill="rgb(225,211,32)" rx="2" ry="2" />
<text  x="858.82" y="79.5" ></text>
</g>
<g >
<title>addClientToTimeoutTable (18 samples, 0.05%)</title><rect x="437.6" y="101" width="0.5" height="15.0" fill="rgb(212,52,50)" rx="2" ry="2" />
<text  x="440.57" y="111.5" ></text>
</g>
<g >
<title>[Missed User Stack] (3,795 samples, 10.22%)</title><rect x="10.0" y="293" width="120.6" height="15.0" fill="rgb(220,197,37)" rx="2" ry="2" />
<text  x="13.00" y="303.5" >[Missed User St..</text>
</g>
<g >
<title>zmalloc (168 samples, 0.45%)</title><rect x="1165.4" y="117" width="5.3" height="15.0" fill="rgb(210,9,16)" rx="2" ry="2" />
<text  x="1168.38" y="127.5" ></text>
</g>
<g >
<title>dictGenericDelete (1,223 samples, 3.29%)</title><rect x="149.2" y="149" width="38.8" height="15.0" fill="rgb(207,125,53)" rx="2" ry="2" />
<text  x="152.20" y="159.5" >dic..</text>
</g>
<g >
<title>do_rallocx (39 samples, 0.10%)</title><rect x="1178.4" y="293" width="1.2" height="15.0" fill="rgb(230,46,50)" rx="2" ry="2" />
<text  x="1181.41" y="303.5" ></text>
</g>
<g >
<title>je_free (55 samples, 0.15%)</title><rect x="188.0" y="149" width="1.8" height="15.0" fill="rgb(253,61,43)" rx="2" ry="2" />
<text  x="191.05" y="159.5" ></text>
</g>
<g >
<title>exitExecutionUnit (15 samples, 0.04%)</title><rect x="135.6" y="181" width="0.5" height="15.0" fill="rgb(213,219,8)" rx="2" ry="2" />
<text  x="138.60" y="191.5" ></text>
</g>
<g >
<title>commandTimeSnapshot (8 samples, 0.02%)</title><rect x="703.5" y="101" width="0.3" height="15.0" fill="rgb(211,182,48)" rx="2" ry="2" />
<text  x="706.51" y="111.5" ></text>
</g>
<g >
<title>dictFind (507 samples, 1.36%)</title><rect x="756.4" y="85" width="16.1" height="15.0" fill="rgb(246,33,27)" rx="2" ry="2" />
<text  x="759.40" y="95.5" ></text>
</g>
<g >
<title>zmalloc (10 samples, 0.03%)</title><rect x="1174.1" y="133" width="0.4" height="15.0" fill="rgb(240,6,24)" rx="2" ry="2" />
<text  x="1177.15" y="143.5" ></text>
</g>
<g >
<title>je_malloc_usable_size (178 samples, 0.48%)</title><rect x="1124.0" y="101" width="5.7" height="15.0" fill="rgb(218,130,19)" rx="2" ry="2" />
<text  x="1127.02" y="111.5" ></text>
</g>
<g >
<title>siphash (145 samples, 0.39%)</title><rect x="1014.3" y="149" width="4.6" height="15.0" fill="rgb(215,139,12)" rx="2" ry="2" />
<text  x="1017.27" y="159.5" ></text>
</g>
<g >
<title>dictFind (376 samples, 1.01%)</title><rect x="234.8" y="149" width="12.0" height="15.0" fill="rgb(243,103,52)" rx="2" ry="2" />
<text  x="237.84" y="159.5" ></text>
</g>
<g >
<title>je_free (45 samples, 0.12%)</title><rect x="384.4" y="117" width="1.4" height="15.0" fill="rgb(223,98,8)" rx="2" ry="2" />
<text  x="387.36" y="127.5" ></text>
</g>
<g >
<title>dictGetVal (17 samples, 0.05%)</title><rect x="222.0" y="165" width="0.6" height="15.0" fill="rgb(218,211,45)" rx="2" ry="2" />
<text  x="225.04" y="175.5" ></text>
</g>
<g >
<title>removeClientFromTimeoutTable (28 samples, 0.08%)</title><rect x="1018.9" y="165" width="0.9" height="15.0" fill="rgb(250,40,45)" rx="2" ry="2" />
<text  x="1021.88" y="175.5" ></text>
</g>
<g >
<title>je_malloc_usable_size (273 samples, 0.73%)</title><rect x="551.4" y="37" width="8.7" height="15.0" fill="rgb(241,12,30)" rx="2" ry="2" />
<text  x="554.41" y="47.5" ></text>
</g>
<g >
<title>siphash (188 samples, 0.51%)</title><rect x="189.8" y="149" width="6.0" height="15.0" fill="rgb(237,15,21)" rx="2" ry="2" />
<text  x="192.79" y="159.5" ></text>
</g>
<g >
<title>enterExecutionUnit (118 samples, 0.32%)</title><rect x="222.9" y="165" width="3.7" height="15.0" fill="rgb(231,25,21)" rx="2" ry="2" />
<text  x="225.86" y="175.5" ></text>
</g>
<g >
<title>getDecodedObject (12 samples, 0.03%)</title><rect x="219.7" y="149" width="0.4" height="15.0" fill="rgb(252,170,36)" rx="2" ry="2" />
<text  x="222.75" y="159.5" ></text>
</g>
<g >
<title>zmalloc (178 samples, 0.48%)</title><rect x="681.6" y="69" width="5.6" height="15.0" fill="rgb(209,15,44)" rx="2" ry="2" />
<text  x="684.56" y="79.5" ></text>
</g>
<g >
<title>siphash (166 samples, 0.45%)</title><rect x="1019.8" y="165" width="5.2" height="15.0" fill="rgb(214,138,27)" rx="2" ry="2" />
<text  x="1022.77" y="175.5" ></text>
</g>
<g >
<title>zmalloc (15 samples, 0.04%)</title><rect x="703.0" y="85" width="0.5" height="15.0" fill="rgb(208,138,20)" rx="2" ry="2" />
<text  x="706.03" y="95.5" ></text>
</g>
<g >
<title>je_realloc (22 samples, 0.06%)</title><rect x="1129.7" y="101" width="0.7" height="15.0" fill="rgb(249,184,38)" rx="2" ry="2" />
<text  x="1132.68" y="111.5" ></text>
</g>
<g >
<title>do_rallocx (21 samples, 0.06%)</title><rect x="547.7" y="37" width="0.7" height="15.0" fill="rgb(233,7,4)" rx="2" ry="2" />
<text  x="550.73" y="47.5" ></text>
</g>
<g >
<title>__strcasecmp_l_avx2 (1,426 samples, 3.84%)</title><rect x="337.3" y="117" width="45.3" height="15.0" fill="rgb(245,229,2)" rx="2" ry="2" />
<text  x="340.31" y="127.5" >__st..</text>
</g>
<g >
<title>dictObjHash (32 samples, 0.09%)</title><rect x="648.7" y="69" width="1.0" height="15.0" fill="rgb(233,205,39)" rx="2" ry="2" />
<text  x="651.71" y="79.5" ></text>
</g>
<g >
<title>zrealloc (12 samples, 0.03%)</title><rect x="1170.7" y="117" width="0.4" height="15.0" fill="rgb(252,92,12)" rx="2" ry="2" />
<text  x="1173.72" y="127.5" ></text>
</g>
<g >
<title>raxAddChild (1,104 samples, 2.97%)</title><rect x="504.3" y="53" width="35.0" height="15.0" fill="rgb(214,34,35)" rx="2" ry="2" />
<text  x="507.27" y="63.5" >ra..</text>
</g>
<g >
<title>zrealloc (299 samples, 0.80%)</title><rect x="529.8" y="37" width="9.5" height="15.0" fill="rgb(248,131,20)" rx="2" ry="2" />
<text  x="532.85" y="47.5" ></text>
</g>
<g >
<title>raxIteratorAddChars.constprop.0 (10 samples, 0.03%)</title><rect x="835.7" y="85" width="0.4" height="15.0" fill="rgb(215,46,51)" rx="2" ry="2" />
<text  x="838.75" y="95.5" ></text>
</g>
<g >
<title>dictFindPositionForInsert (1,212 samples, 3.26%)</title><rect x="609.2" y="69" width="38.5" height="15.0" fill="rgb(217,62,43)" rx="2" ry="2" />
<text  x="612.23" y="79.5" >dic..</text>
</g>
<g >
<title>unblockClient (4,704 samples, 12.66%)</title><rect x="1025.0" y="165" width="149.5" height="15.0" fill="rgb(220,206,11)" rx="2" ry="2" />
<text  x="1028.04" y="175.5" >unblockClient</text>
</g>
<g >
<title>raxFind (78 samples, 0.21%)</title><rect x="386.6" y="117" width="2.4" height="15.0" fill="rgb(240,210,16)" rx="2" ry="2" />
<text  x="389.55" y="127.5" ></text>
</g>
<g >
<title>zfree (132 samples, 0.36%)</title><rect x="944.3" y="101" width="4.2" height="15.0" fill="rgb(241,53,18)" rx="2" ry="2" />
<text  x="947.26" y="111.5" ></text>
</g>
<g >
<title>dictGenericDelete (42 samples, 0.11%)</title><rect x="220.1" y="165" width="1.4" height="15.0" fill="rgb(253,66,29)" rx="2" ry="2" />
<text  x="223.13" y="175.5" ></text>
</g>
<g >
<title>getDecodedObject (62 samples, 0.17%)</title><rect x="217.8" y="133" width="1.9" height="15.0" fill="rgb(235,57,49)" rx="2" ry="2" />
<text  x="220.78" y="143.5" ></text>
</g>
<g >
<title>getDecodedObject (46 samples, 0.12%)</title><rect x="1011.9" y="117" width="1.4" height="15.0" fill="rgb(254,56,15)" rx="2" ry="2" />
<text  x="1014.86" y="127.5" ></text>
</g>
<g >
<title>call (20,116 samples, 54.15%)</title><rect x="315.1" y="133" width="639.0" height="15.0" fill="rgb(210,54,45)" rx="2" ry="2" />
<text  x="318.14" y="143.5" >call</text>
</g>
<g >
<title>raxTryInsert (8 samples, 0.02%)</title><rect x="702.8" y="85" width="0.2" height="15.0" fill="rgb(221,45,15)" rx="2" ry="2" />
<text  x="705.78" y="95.5" ></text>
</g>
<g >
<title>expireIfNeeded (42 samples, 0.11%)</title><rect x="255.1" y="149" width="1.3" height="15.0" fill="rgb(252,107,50)" rx="2" ry="2" />
<text  x="258.07" y="159.5" ></text>
</g>
<g >
<title>je_malloc (88 samples, 0.24%)</title><rect x="1100.5" y="117" width="2.8" height="15.0" fill="rgb(206,29,7)" rx="2" ry="2" />
<text  x="1103.55" y="127.5" ></text>
</g>
<g >
<title>decrRefCount (48 samples, 0.13%)</title><rect x="161.6" y="117" width="1.5" height="15.0" fill="rgb(234,214,40)" rx="2" ry="2" />
<text  x="164.59" y="127.5" ></text>
</g>
<g >
<title>je_malloc_usable_size (225 samples, 0.61%)</title><rect x="517.2" y="37" width="7.2" height="15.0" fill="rgb(252,171,22)" rx="2" ry="2" />
<text  x="520.23" y="47.5" ></text>
</g>
<g >
<title>getDecodedObject (23 samples, 0.06%)</title><rect x="647.0" y="53" width="0.7" height="15.0" fill="rgb(222,161,35)" rx="2" ry="2" />
<text  x="650.00" y="63.5" ></text>
</g>
<g >
<title>raxCompressNode (5 samples, 0.01%)</title><rect x="456.4" y="69" width="0.2" height="15.0" fill="rgb(232,62,45)" rx="2" ry="2" />
<text  x="459.43" y="79.5" ></text>
</g>
<g >
<title>dictObjKeyCompare (143 samples, 0.38%)</title><rect x="649.7" y="69" width="4.6" height="15.0" fill="rgb(230,93,16)" rx="2" ry="2" />
<text  x="652.73" y="79.5" ></text>
</g>
<g >
<title>expireIfNeeded (46 samples, 0.12%)</title><rect x="783.3" y="85" width="1.5" height="15.0" fill="rgb(250,219,44)" rx="2" ry="2" />
<text  x="786.34" y="95.5" ></text>
</g>
<g >
<title>lpGet (240 samples, 0.65%)</title><rect x="904.3" y="85" width="7.7" height="15.0" fill="rgb(240,105,8)" rx="2" ry="2" />
<text  x="907.33" y="95.5" ></text>
</g>
<g >
<title>do_rallocx (24 samples, 0.06%)</title><rect x="1123.3" y="101" width="0.7" height="15.0" fill="rgb(211,147,1)" rx="2" ry="2" />
<text  x="1126.26" y="111.5" ></text>
</g>
<g >
<title>intrev64 (724 samples, 1.95%)</title><rect x="881.3" y="85" width="23.0" height="15.0" fill="rgb(236,222,29)" rx="2" ry="2" />
<text  x="884.33" y="95.5" >i..</text>
</g>
<g >
<title>je_malloc_usable_size (472 samples, 1.27%)</title><rect x="1103.3" y="117" width="15.0" height="15.0" fill="rgb(230,68,35)" rx="2" ry="2" />
<text  x="1106.34" y="127.5" ></text>
</g>
<g >
<title>siphash (142 samples, 0.38%)</title><rect x="256.4" y="149" width="4.5" height="15.0" fill="rgb(245,210,2)" rx="2" ry="2" />
<text  x="259.41" y="159.5" ></text>
</g>
<g >
<title>enterExecutionUnit (17 samples, 0.05%)</title><rect x="141.0" y="149" width="0.6" height="15.0" fill="rgb(254,153,29)" rx="2" ry="2" />
<text  x="144.03" y="159.5" ></text>
</g>
<g >
<title>getLongLongFromObjectOrReply (83 samples, 0.22%)</title><rect x="720.3" y="85" width="2.6" height="15.0" fill="rgb(219,150,52)" rx="2" ry="2" />
<text  x="723.28" y="95.5" ></text>
</g>
<g >
<title>call (7 samples, 0.02%)</title><rect x="283.4" y="149" width="0.2" height="15.0" fill="rgb(233,54,14)" rx="2" ry="2" />
<text  x="286.38" y="159.5" ></text>
</g>
<g >
<title>je_arena_ralloc_no_move (239 samples, 0.64%)</title><rect x="1179.6" y="293" width="7.6" height="15.0" fill="rgb(218,23,26)" rx="2" ry="2" />
<text  x="1182.64" y="303.5" ></text>
</g>
<g >
<title>scriptIsTimedout (51 samples, 0.14%)</title><rect x="961.8" y="149" width="1.6" height="15.0" fill="rgb(252,167,51)" rx="2" ry="2" />
<text  x="964.83" y="159.5" ></text>
</g>
<g >
<title>je_malloc (95 samples, 0.26%)</title><rect x="548.4" y="37" width="3.0" height="15.0" fill="rgb(251,145,27)" rx="2" ry="2" />
<text  x="551.40" y="47.5" ></text>
</g>
<g >
<title>je_free (55 samples, 0.15%)</title><rect x="179.1" y="133" width="1.7" height="15.0" fill="rgb(226,63,27)" rx="2" ry="2" />
<text  x="182.06" y="143.5" ></text>
</g>
<g >
<title>modulePostExecutionUnitOperations (25 samples, 0.07%)</title><rect x="260.9" y="165" width="0.8" height="15.0" fill="rgb(209,80,40)" rx="2" ry="2" />
<text  x="263.92" y="175.5" ></text>
</g>
<g >
<title>lpPrev (87 samples, 0.23%)</title><rect x="804.8" y="101" width="2.8" height="15.0" fill="rgb(252,108,32)" rx="2" ry="2" />
<text  x="807.81" y="111.5" ></text>
</g>
<g >
<title>processCommand (32,987 samples, 88.80%)</title><rect x="130.6" y="197" width="1047.8" height="15.0" fill="rgb(224,34,23)" rx="2" ry="2" />
<text  x="133.55" y="207.5" >processCommand</text>
</g>
<g >
<title>listRewind (26 samples, 0.07%)</title><rect x="956.6" y="133" width="0.8" height="15.0" fill="rgb(220,174,48)" rx="2" ry="2" />
<text  x="959.55" y="143.5" ></text>
</g>
<g >
<title>raxRemove (3,951 samples, 10.64%)</title><rect x="1045.6" y="133" width="125.5" height="15.0" fill="rgb(243,22,13)" rx="2" ry="2" />
<text  x="1048.59" y="143.5" >raxRemove</text>
</g>
<g >
<title>__strcasecmp_avx2 (35 samples, 0.09%)</title><rect x="265.1" y="149" width="1.1" height="15.0" fill="rgb(235,177,37)" rx="2" ry="2" />
<text  x="268.11" y="159.5" ></text>
</g>
<g >
<title>siphash (542 samples, 1.46%)</title><rect x="664.3" y="69" width="17.3" height="15.0" fill="rgb(232,50,35)" rx="2" ry="2" />
<text  x="667.34" y="79.5" ></text>
</g>
<g >
<title>ACLCheckAllUserCommandPerm.part.0.isra.0 (4 samples, 0.01%)</title><rect x="265.0" y="149" width="0.1" height="15.0" fill="rgb(233,26,27)" rx="2" ry="2" />
<text  x="267.98" y="159.5" ></text>
</g>
<g >
<title>dictFind (36 samples, 0.10%)</title><rect x="705.1" y="101" width="1.2" height="15.0" fill="rgb(251,87,11)" rx="2" ry="2" />
<text  x="708.13" y="111.5" ></text>
</g>
<g >
<title>dictFind (7 samples, 0.02%)</title><rect x="135.1" y="181" width="0.2" height="15.0" fill="rgb(207,171,33)" rx="2" ry="2" />
<text  x="138.09" y="191.5" ></text>
</g>
<g >
<title>decrRefCount (57 samples, 0.15%)</title><rect x="1010.0" y="117" width="1.9" height="15.0" fill="rgb(226,157,10)" rx="2" ry="2" />
<text  x="1013.05" y="127.5" ></text>
</g>
<g >
<title>listUnlinkNode (28 samples, 0.08%)</title><rect x="228.8" y="165" width="0.9" height="15.0" fill="rgb(212,153,17)" rx="2" ry="2" />
<text  x="231.77" y="175.5" ></text>
</g>
<g >
<title>processCommandAndResetClient (22,181 samples, 59.71%)</title><rect x="261.8" y="165" width="704.6" height="15.0" fill="rgb(236,222,13)" rx="2" ry="2" />
<text  x="264.77" y="175.5" >processCommandAndResetClient</text>
</g>
<g >
<title>zfree (12 samples, 0.03%)</title><rect x="195.8" y="149" width="0.3" height="15.0" fill="rgb(213,208,31)" rx="2" ry="2" />
<text  x="198.77" y="159.5" ></text>
</g>
<g >
<title>removeClientFromTimeoutTable (4,635 samples, 12.48%)</title><rect x="1027.2" y="149" width="147.3" height="15.0" fill="rgb(210,212,9)" rx="2" ry="2" />
<text  x="1030.23" y="159.5" >removeClientFromTi..</text>
</g>
<g >
<title>je_malloc_usable_size (66 samples, 0.18%)</title><rect x="180.8" y="133" width="2.1" height="15.0" fill="rgb(217,147,30)" rx="2" ry="2" />
<text  x="183.80" y="143.5" ></text>
</g>
<g >
<title>string2ll.part.0 (138 samples, 0.37%)</title><rect x="723.0" y="85" width="4.4" height="15.0" fill="rgb(216,185,15)" rx="2" ry="2" />
<text  x="726.01" y="95.5" ></text>
</g>
<g >
<title>raxAddChild (14 samples, 0.04%)</title><rect x="456.0" y="69" width="0.4" height="15.0" fill="rgb(227,218,33)" rx="2" ry="2" />
<text  x="458.99" y="79.5" ></text>
</g>
<g >
<title>dictSdsKeyCompare (267 samples, 0.72%)</title><rect x="774.9" y="85" width="8.4" height="15.0" fill="rgb(222,15,46)" rx="2" ry="2" />
<text  x="777.85" y="95.5" ></text>
</g>
<g >
<title>scriptIsRunning (21 samples, 0.06%)</title><rect x="961.2" y="149" width="0.6" height="15.0" fill="rgb(215,225,2)" rx="2" ry="2" />
<text  x="964.16" y="159.5" ></text>
</g>
<g >
<title>aeMain (32,987 samples, 88.80%)</title><rect x="130.6" y="261" width="1047.8" height="15.0" fill="rgb(215,175,19)" rx="2" ry="2" />
<text  x="133.55" y="271.5" >aeMain</text>
</g>
<g >
<title>exitExecutionUnit (10 samples, 0.03%)</title><rect x="226.6" y="165" width="0.3" height="15.0" fill="rgb(243,138,28)" rx="2" ry="2" />
<text  x="229.61" y="175.5" ></text>
</g>
<g >
<title>je_malloc (166 samples, 0.45%)</title><rect x="654.3" y="69" width="5.2" height="15.0" fill="rgb(218,135,11)" rx="2" ry="2" />
<text  x="657.27" y="79.5" ></text>
</g>
<g >
<title>lpLast (92 samples, 0.25%)</title><rect x="800.3" y="101" width="2.9" height="15.0" fill="rgb(250,10,36)" rx="2" ry="2" />
<text  x="803.30" y="111.5" ></text>
</g>
<g >
<title>dictGetKey (18 samples, 0.05%)</title><rect x="221.5" y="165" width="0.5" height="15.0" fill="rgb(207,111,17)" rx="2" ry="2" />
<text  x="224.46" y="175.5" ></text>
</g>
<g >
<title>dictFind (696 samples, 1.87%)</title><rect x="198.0" y="165" width="22.1" height="15.0" fill="rgb(214,103,48)" rx="2" ry="2" />
<text  x="201.02" y="175.5" >d..</text>
</g>
<g >
<title>__memcpy_avx_unaligned_erms (44 samples, 0.12%)</title><rect x="1099.1" y="117" width="1.4" height="15.0" fill="rgb(210,163,9)" rx="2" ry="2" />
<text  x="1102.12" y="127.5" ></text>
</g>
<g >
<title>monotonicGetType (32 samples, 0.09%)</title><rect x="957.4" y="133" width="1.0" height="15.0" fill="rgb(222,66,1)" rx="2" ry="2" />
<text  x="960.38" y="143.5" ></text>
</g>
<g >
<title>dictFindPositionForInsert (34 samples, 0.09%)</title><rect x="687.2" y="85" width="1.1" height="15.0" fill="rgb(253,218,11)" rx="2" ry="2" />
<text  x="690.21" y="95.5" ></text>
</g>
<g >
<title>processCommand (21,263 samples, 57.24%)</title><rect x="285.7" y="149" width="675.5" height="15.0" fill="rgb(245,212,29)" rx="2" ry="2" />
<text  x="288.73" y="159.5" >processCommand</text>
</g>
<g >
<title>propagatePendingCommands (13 samples, 0.03%)</title><rect x="966.4" y="165" width="0.4" height="15.0" fill="rgb(225,104,5)" rx="2" ry="2" />
<text  x="969.37" y="175.5" ></text>
</g>
<g >
<title>handleClientsBlockedOnKeys (32,700 samples, 88.03%)</title><rect x="136.1" y="181" width="1038.7" height="15.0" fill="rgb(218,151,17)" rx="2" ry="2" />
<text  x="139.08" y="191.5" >handleClientsBlockedOnKeys</text>
</g>
<g >
<title>raxSeekGreatest (849 samples, 2.29%)</title><rect x="836.1" y="85" width="26.9" height="15.0" fill="rgb(217,130,37)" rx="2" ry="2" />
<text  x="839.07" y="95.5" >r..</text>
</g>
<g >
<title>lpPrev (467 samples, 1.26%)</title><rect x="927.1" y="85" width="14.8" height="15.0" fill="rgb(226,160,54)" rx="2" ry="2" />
<text  x="930.11" y="95.5" ></text>
</g>
<g >
<title>raxPrev (12 samples, 0.03%)</title><rect x="826.5" y="101" width="0.4" height="15.0" fill="rgb(215,155,15)" rx="2" ry="2" />
<text  x="829.51" y="111.5" ></text>
</g>
<g >
<title>zfree (17 samples, 0.05%)</title><rect x="953.6" y="117" width="0.5" height="15.0" fill="rgb(220,103,41)" rx="2" ry="2" />
<text  x="956.60" y="127.5" ></text>
</g>
<g >
<title>__strcasecmp_l_avx2 (476 samples, 1.28%)</title><rect x="266.2" y="149" width="15.1" height="15.0" fill="rgb(221,155,41)" rx="2" ry="2" />
<text  x="269.22" y="159.5" ></text>
</g>
<g >
<title>raxFind (596 samples, 1.60%)</title><rect x="807.6" y="101" width="18.9" height="15.0" fill="rgb(217,222,19)" rx="2" ry="2" />
<text  x="810.57" y="111.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (48 samples, 0.13%)</title><rect x="1001.3" y="133" width="1.5" height="15.0" fill="rgb(218,207,33)" rx="2" ry="2" />
<text  x="1004.31" y="143.5" ></text>
</g>
<g >
<title>isPausedActions (29 samples, 0.08%)</title><rect x="284.8" y="149" width="0.9" height="15.0" fill="rgb(249,159,17)" rx="2" ry="2" />
<text  x="287.80" y="159.5" ></text>
</g>
<g >
<title>dictFreeUnlinkedEntry (13 samples, 0.03%)</title><rect x="148.5" y="149" width="0.4" height="15.0" fill="rgb(251,8,35)" rx="2" ry="2" />
<text  x="151.47" y="159.5" ></text>
</g>
<g >
<title>je_malloc_usable_size (151 samples, 0.41%)</title><rect x="659.5" y="69" width="4.8" height="15.0" fill="rgb(231,116,23)" rx="2" ry="2" />
<text  x="662.54" y="79.5" ></text>
</g>
<g >
<title>readQueryFromClient (32,987 samples, 88.80%)</title><rect x="130.6" y="229" width="1047.8" height="15.0" fill="rgb(245,16,46)" rx="2" ry="2" />
<text  x="133.55" y="239.5" >readQueryFromClient</text>
</g>
<g >
<title>zfree (16 samples, 0.04%)</title><rect x="599.6" y="69" width="0.5" height="15.0" fill="rgb(235,128,5)" rx="2" ry="2" />
<text  x="602.60" y="79.5" ></text>
</g>
<g >
<title>releaseBlockedEntry (5 samples, 0.01%)</title><rect x="1177.3" y="181" width="0.1" height="15.0" fill="rgb(215,216,41)" rx="2" ry="2" />
<text  x="1180.26" y="191.5" ></text>
</g>
<g >
<title>ACLCheckAllPerm (25 samples, 0.07%)</title><rect x="264.2" y="149" width="0.8" height="15.0" fill="rgb(223,172,36)" rx="2" ry="2" />
<text  x="267.19" y="159.5" ></text>
</g>
<g >
<title>incrRefCount (11 samples, 0.03%)</title><rect x="728.5" y="101" width="0.4" height="15.0" fill="rgb(210,164,8)" rx="2" ry="2" />
<text  x="731.54" y="111.5" ></text>
</g>
<g >
<title>LRU_CLOCK (16 samples, 0.04%)</title><rect x="428.6" y="101" width="0.5" height="15.0" fill="rgb(230,41,13)" rx="2" ry="2" />
<text  x="431.58" y="111.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (105 samples, 0.28%)</title><rect x="768.9" y="69" width="3.3" height="15.0" fill="rgb(241,161,45)" rx="2" ry="2" />
<text  x="771.88" y="79.5" ></text>
</g>
<g >
<title>raxStop (22 samples, 0.06%)</title><rect x="865.0" y="101" width="0.7" height="15.0" fill="rgb(252,200,40)" rx="2" ry="2" />
<text  x="868.01" y="111.5" ></text>
</g>
<g >
<title>lpNext (50 samples, 0.13%)</title><rect x="803.2" y="101" width="1.6" height="15.0" fill="rgb(213,114,13)" rx="2" ry="2" />
<text  x="806.22" y="111.5" ></text>
</g>
<g >
<title>streamIteratorGetID (13 samples, 0.03%)</title><rect x="391.9" y="117" width="0.4" height="15.0" fill="rgb(232,154,34)" rx="2" ry="2" />
<text  x="394.92" y="127.5" ></text>
</g>
<g >
<title>dictEncObjHash (52 samples, 0.14%)</title><rect x="971.0" y="149" width="1.6" height="15.0" fill="rgb(240,212,36)" rx="2" ry="2" />
<text  x="973.98" y="159.5" ></text>
</g>
<g >
<title>__memcpy_avx_unaligned_erms (77 samples, 0.21%)</title><rect x="483.8" y="53" width="2.5" height="15.0" fill="rgb(221,184,1)" rx="2" ry="2" />
<text  x="486.85" y="63.5" ></text>
</g>
<g >
<title>decrRefCount (88 samples, 0.24%)</title><rect x="215.0" y="133" width="2.8" height="15.0" fill="rgb(221,34,11)" rx="2" ry="2" />
<text  x="217.98" y="143.5" ></text>
</g>
<g >
<title>raxIteratorAddChars (99 samples, 0.27%)</title><rect x="858.1" y="69" width="3.1" height="15.0" fill="rgb(232,40,36)" rx="2" ry="2" />
<text  x="861.08" y="79.5" ></text>
</g>
<g >
<title>lookupKeyRead (1,469 samples, 3.95%)</title><rect x="750.0" y="101" width="46.6" height="15.0" fill="rgb(240,76,39)" rx="2" ry="2" />
<text  x="752.98" y="111.5" >look..</text>
</g>
<g >
<title>__strcasecmp_avx2 (82 samples, 0.22%)</title><rect x="334.7" y="117" width="2.6" height="15.0" fill="rgb(221,190,4)" rx="2" ry="2" />
<text  x="337.71" y="127.5" ></text>
</g>
<g >
<title>je_free (255 samples, 0.69%)</title><rect x="1037.5" y="133" width="8.1" height="15.0" fill="rgb(240,3,38)" rx="2" ry="2" />
<text  x="1040.49" y="143.5" ></text>
</g>
<g >
<title>checkType (11 samples, 0.03%)</title><rect x="383.1" y="117" width="0.4" height="15.0" fill="rgb(214,4,48)" rx="2" ry="2" />
<text  x="386.12" y="127.5" ></text>
</g>
<g >
<title>dictGenHashFunction (10 samples, 0.03%)</title><rect x="772.5" y="85" width="0.3" height="15.0" fill="rgb(254,125,2)" rx="2" ry="2" />
<text  x="775.50" y="95.5" ></text>
</g>
<g >
<title>dictObjHash (58 samples, 0.16%)</title><rect x="982.1" y="133" width="1.9" height="15.0" fill="rgb(253,142,48)" rx="2" ry="2" />
<text  x="985.13" y="143.5" ></text>
</g>
<g >
<title>firePostExecutionUnitJobs (21 samples, 0.06%)</title><rect x="227.5" y="165" width="0.6" height="15.0" fill="rgb(219,106,52)" rx="2" ry="2" />
<text  x="230.47" y="175.5" ></text>
</g>
<g >
<title>decrRefCount (50 samples, 0.13%)</title><rect x="643.8" y="37" width="1.6" height="15.0" fill="rgb(254,226,16)" rx="2" ry="2" />
<text  x="646.79" y="47.5" ></text>
</g>
<g >
<title>dictGenHashFunction (10 samples, 0.03%)</title><rect x="148.9" y="149" width="0.3" height="15.0" fill="rgb(219,159,9)" rx="2" ry="2" />
<text  x="151.88" y="159.5" ></text>
</g>
<g >
<title>zrealloc (312 samples, 0.84%)</title><rect x="566.4" y="37" width="10.0" height="15.0" fill="rgb(233,24,19)" rx="2" ry="2" />
<text  x="569.44" y="47.5" ></text>
</g>
<g >
<title>dictSdsKeyCompare (162 samples, 0.44%)</title><rect x="249.9" y="149" width="5.2" height="15.0" fill="rgb(248,174,5)" rx="2" ry="2" />
<text  x="252.93" y="159.5" ></text>
</g>
<g >
<title>dictEncObjHash (55 samples, 0.15%)</title><rect x="196.1" y="165" width="1.8" height="15.0" fill="rgb(236,65,16)" rx="2" ry="2" />
<text  x="199.15" y="175.5" ></text>
</g>
<g >
<title>dictSetVal (20 samples, 0.05%)</title><rect x="709.2" y="101" width="0.6" height="15.0" fill="rgb(239,122,24)" rx="2" ry="2" />
<text  x="712.19" y="111.5" ></text>
</g>
<g >
<title>zfree (167 samples, 0.45%)</title><rect x="173.3" y="117" width="5.3" height="15.0" fill="rgb(247,87,22)" rx="2" ry="2" />
<text  x="176.28" y="127.5" ></text>
</g>
<g >
<title>listAddNodeTail (11 samples, 0.03%)</title><rect x="749.6" y="101" width="0.4" height="15.0" fill="rgb(253,98,3)" rx="2" ry="2" />
<text  x="752.63" y="111.5" ></text>
</g>
<g >
<title>dictAddRaw (43 samples, 0.12%)</title><rect x="703.8" y="101" width="1.3" height="15.0" fill="rgb(235,144,10)" rx="2" ry="2" />
<text  x="706.76" y="111.5" ></text>
</g>
<g >
<title>decrRefCount (7 samples, 0.02%)</title><rect x="206.7" y="149" width="0.2" height="15.0" fill="rgb(236,11,45)" rx="2" ry="2" />
<text  x="209.69" y="159.5" ></text>
</g>
<g >
<title>authRequired (64 samples, 0.17%)</title><rect x="281.3" y="149" width="2.1" height="15.0" fill="rgb(225,104,23)" rx="2" ry="2" />
<text  x="284.34" y="159.5" ></text>
</g>
<g >
<title>je_realloc (12 samples, 0.03%)</title><rect x="524.4" y="37" width="0.4" height="15.0" fill="rgb(244,224,43)" rx="2" ry="2" />
<text  x="527.38" y="47.5" ></text>
</g>
<g >
<title>ACLCheckAllUserCommandPerm.part.0.isra.0 (201 samples, 0.54%)</title><rect x="308.7" y="133" width="6.4" height="15.0" fill="rgb(216,124,31)" rx="2" ry="2" />
<text  x="311.72" y="143.5" ></text>
</g>
<g >
<title>all (37,147 samples, 100%)</title><rect x="10.0" y="325" width="1180.0" height="15.0" fill="rgb(227,101,3)" rx="2" ry="2" />
<text  x="13.00" y="335.5" ></text>
</g>
<g >
<title>dictSetVal (13 samples, 0.03%)</title><rect x="688.3" y="85" width="0.4" height="15.0" fill="rgb(219,92,36)" rx="2" ry="2" />
<text  x="691.29" y="95.5" ></text>
</g>
<g >
<title>getDecodedObject (19 samples, 0.05%)</title><rect x="1013.3" y="133" width="0.6" height="15.0" fill="rgb(247,131,20)" rx="2" ry="2" />
<text  x="1016.32" y="143.5" ></text>
</g>
<g >
<title>je_free (59 samples, 0.16%)</title><rect x="454.1" y="69" width="1.9" height="15.0" fill="rgb(241,72,19)" rx="2" ry="2" />
<text  x="457.12" y="79.5" ></text>
</g>
<g >
<title>intrev64 (91 samples, 0.24%)</title><rect x="728.9" y="101" width="2.9" height="15.0" fill="rgb(209,68,54)" rx="2" ry="2" />
<text  x="731.89" y="111.5" ></text>
</g>
<g >
<title>raxGenericInsert (4,502 samples, 12.12%)</title><rect x="456.6" y="69" width="143.0" height="15.0" fill="rgb(228,25,29)" rx="2" ry="2" />
<text  x="459.59" y="79.5" >raxGenericInsert</text>
</g>
<g >
<title>dictSdsKeyCompare (9 samples, 0.02%)</title><rect x="772.2" y="69" width="0.3" height="15.0" fill="rgb(208,7,34)" rx="2" ry="2" />
<text  x="775.22" y="79.5" ></text>
</g>
<g >
<title>lookupKeyReadWithFlags (984 samples, 2.65%)</title><rect x="229.7" y="165" width="31.2" height="15.0" fill="rgb(240,208,21)" rx="2" ry="2" />
<text  x="232.66" y="175.5" >lo..</text>
</g>
<g >
<title>processCommandAndResetClient (6 samples, 0.02%)</title><rect x="1177.1" y="181" width="0.2" height="15.0" fill="rgb(231,171,27)" rx="2" ry="2" />
<text  x="1180.07" y="191.5" ></text>
</g>
<g >
<title>updateClientMemUsageAndBucket (92 samples, 0.25%)</title><rect x="963.4" y="149" width="3.0" height="15.0" fill="rgb(227,35,29)" rx="2" ry="2" />
<text  x="966.45" y="159.5" ></text>
</g>
<g >
<title>lpFirst (41 samples, 0.11%)</title><rect x="796.6" y="101" width="1.3" height="15.0" fill="rgb(251,134,20)" rx="2" ry="2" />
<text  x="799.65" y="111.5" ></text>
</g>
<g >
<title>dictGenHashFunction (11 samples, 0.03%)</title><rect x="1013.9" y="149" width="0.4" height="15.0" fill="rgb(221,156,39)" rx="2" ry="2" />
<text  x="1016.92" y="159.5" ></text>
</g>
<g >
<title>raxIteratorAddChars (21 samples, 0.06%)</title><rect x="835.1" y="85" width="0.6" height="15.0" fill="rgb(238,29,43)" rx="2" ry="2" />
<text  x="838.08" y="95.5" ></text>
</g>
<g >
<title>dictIncrUnsignedIntegerVal (9 samples, 0.02%)</title><rect x="222.6" y="165" width="0.3" height="15.0" fill="rgb(239,25,2)" rx="2" ry="2" />
<text  x="225.58" y="175.5" ></text>
</g>
<g >
<title>streamIteratorGetID (2,421 samples, 6.52%)</title><rect x="865.7" y="101" width="76.9" height="15.0" fill="rgb(230,66,7)" rx="2" ry="2" />
<text  x="868.70" y="111.5" >streamIt..</text>
</g>
<g >
<title>intrev64 (178 samples, 0.48%)</title><rect x="1031.8" y="133" width="5.7" height="15.0" fill="rgb(234,150,32)" rx="2" ry="2" />
<text  x="1034.84" y="143.5" ></text>
</g>
<g >
<title>processInputBuffer (32,987 samples, 88.80%)</title><rect x="130.6" y="213" width="1047.8" height="15.0" fill="rgb(231,183,30)" rx="2" ry="2" />
<text  x="133.55" y="223.5" >processInputBuffer</text>
</g>
<g >
<title>main (32,987 samples, 88.80%)</title><rect x="130.6" y="277" width="1047.8" height="15.0" fill="rgb(209,8,19)" rx="2" ry="2" />
<text  x="133.55" y="287.5" >main</text>
</g>
<g >
<title>dictSdsKeyCompare (6 samples, 0.02%)</title><rect x="246.6" y="133" width="0.2" height="15.0" fill="rgb(220,173,4)" rx="2" ry="2" />
<text  x="249.59" y="143.5" ></text>
</g>
<g >
<title>listNext (76 samples, 0.20%)</title><rect x="954.1" y="133" width="2.5" height="15.0" fill="rgb(216,191,38)" rx="2" ry="2" />
<text  x="957.14" y="143.5" ></text>
</g>
<g >
<title>getTimeoutFromObjectOrReply (13 samples, 0.03%)</title><rect x="383.9" y="117" width="0.5" height="15.0" fill="rgb(217,141,11)" rx="2" ry="2" />
<text  x="386.95" y="127.5" ></text>
</g>
<g >
<title>dictGenHashFunction (14 samples, 0.04%)</title><rect x="981.7" y="133" width="0.4" height="15.0" fill="rgb(246,194,31)" rx="2" ry="2" />
<text  x="984.68" y="143.5" ></text>
</g>
<g >
<title>siphash (373 samples, 1.00%)</title><rect x="784.8" y="85" width="11.8" height="15.0" fill="rgb(211,147,38)" rx="2" ry="2" />
<text  x="787.80" y="95.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (51 samples, 0.14%)</title><rect x="980.0" y="117" width="1.6" height="15.0" fill="rgb(213,188,25)" rx="2" ry="2" />
<text  x="983.00" y="127.5" ></text>
</g>
<g >
<title>__memcpy_avx_unaligned (23 samples, 0.06%)</title><rect x="1028.6" y="133" width="0.7" height="15.0" fill="rgb(208,105,35)" rx="2" ry="2" />
<text  x="1031.57" y="143.5" ></text>
</g>
<g >
<title>dictObjKeyCompare (137 samples, 0.37%)</title><rect x="984.0" y="133" width="4.3" height="15.0" fill="rgb(227,135,44)" rx="2" ry="2" />
<text  x="986.97" y="143.5" ></text>
</g>
<g >
<title>__memcpy_avx_unaligned (21 samples, 0.06%)</title><rect x="483.2" y="53" width="0.6" height="15.0" fill="rgb(214,146,11)" rx="2" ry="2" />
<text  x="486.18" y="63.5" ></text>
</g>
<g >
<title>hasActiveChildProcess (20 samples, 0.05%)</title><rect x="228.1" y="165" width="0.7" height="15.0" fill="rgb(211,214,2)" rx="2" ry="2" />
<text  x="231.13" y="175.5" ></text>
</g>
<g >
<title>zrealloc (31 samples, 0.08%)</title><rect x="598.6" y="53" width="1.0" height="15.0" fill="rgb(243,89,8)" rx="2" ry="2" />
<text  x="601.62" y="63.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (264 samples, 0.71%)</title><rect x="429.2" y="101" width="8.4" height="15.0" fill="rgb(224,196,38)" rx="2" ry="2" />
<text  x="432.18" y="111.5" ></text>
</g>
<g >
<title>afterCommand (30 samples, 0.08%)</title><rect x="130.6" y="181" width="0.9" height="15.0" fill="rgb(233,166,45)" rx="2" ry="2" />
<text  x="133.55" y="191.5" ></text>
</g>
<g >
<title>zmalloc (173 samples, 0.47%)</title><rect x="697.3" y="69" width="5.5" height="15.0" fill="rgb(229,110,43)" rx="2" ry="2" />
<text  x="700.28" y="79.5" ></text>
</g>
<g >
<title>blockForKeys (8,354 samples, 22.49%)</title><rect x="438.1" y="101" width="265.4" height="15.0" fill="rgb(226,77,49)" rx="2" ry="2" />
<text  x="441.14" y="111.5" >blockForKeys</text>
</g>
<g >
<title>trackingHandlePendingKeyInvalidations (23 samples, 0.06%)</title><rect x="1177.4" y="181" width="0.8" height="15.0" fill="rgb(250,86,1)" rx="2" ry="2" />
<text  x="1180.42" y="191.5" ></text>
</g>
<g >
<title>firePostExecutionUnitJobs (115 samples, 0.31%)</title><rect x="141.6" y="149" width="3.6" height="15.0" fill="rgb(228,173,36)" rx="2" ry="2" />
<text  x="144.57" y="159.5" ></text>
</g>
<g >
<title>dictDelete (113 samples, 0.30%)</title><rect x="131.5" y="181" width="3.6" height="15.0" fill="rgb(228,20,6)" rx="2" ry="2" />
<text  x="134.50" y="191.5" ></text>
</g>
<g >
<title>zmalloc (160 samples, 0.43%)</title><rect x="524.8" y="37" width="5.0" height="15.0" fill="rgb(227,184,32)" rx="2" ry="2" />
<text  x="527.76" y="47.5" ></text>
</g>
<g >
<title>dictEncObjKeyCompare (304 samples, 0.82%)</title><rect x="1003.7" y="133" width="9.6" height="15.0" fill="rgb(213,155,22)" rx="2" ry="2" />
<text  x="1006.66" y="143.5" ></text>
</g>
<g >
<title>raxSeek (1,138 samples, 3.06%)</title><rect x="826.9" y="101" width="36.1" height="15.0" fill="rgb(226,152,27)" rx="2" ry="2" />
<text  x="829.89" y="111.5" >rax..</text>
</g>
<g >
<title>dictDelete (1,602 samples, 4.31%)</title><rect x="145.3" y="165" width="50.8" height="15.0" fill="rgb(217,21,32)" rx="2" ry="2" />
<text  x="148.26" y="175.5" >dictD..</text>
</g>
<g >
<title>__memcpy_avx_unaligned (16 samples, 0.04%)</title><rect x="1098.6" y="117" width="0.5" height="15.0" fill="rgb(235,29,28)" rx="2" ry="2" />
<text  x="1101.61" y="127.5" ></text>
</g>
<g >
<title>siphash (217 samples, 0.58%)</title><rect x="988.3" y="133" width="6.9" height="15.0" fill="rgb(242,107,28)" rx="2" ry="2" />
<text  x="991.32" y="143.5" ></text>
</g>
<g >
<title>lpNext (477 samples, 1.28%)</title><rect x="912.0" y="85" width="15.1" height="15.0" fill="rgb(208,55,53)" rx="2" ry="2" />
<text  x="914.95" y="95.5" ></text>
</g>
<g >
<title>dictObjKeyCompare (10 samples, 0.03%)</title><rect x="646.7" y="53" width="0.3" height="15.0" fill="rgb(251,118,40)" rx="2" ry="2" />
<text  x="649.68" y="63.5" ></text>
</g>
<g >
<title>dictEncObjKeyCompare (10 samples, 0.03%)</title><rect x="608.9" y="69" width="0.3" height="15.0" fill="rgb(253,227,11)" rx="2" ry="2" />
<text  x="611.91" y="79.5" ></text>
</g>
<g >
<title>preventCommandPropagation (16 samples, 0.04%)</title><rect x="386.0" y="117" width="0.6" height="15.0" fill="rgb(219,52,33)" rx="2" ry="2" />
<text  x="389.04" y="127.5" ></text>
</g>
<g >
<title>afterCommand (143 samples, 0.38%)</title><rect x="140.7" y="165" width="4.5" height="15.0" fill="rgb(206,75,51)" rx="2" ry="2" />
<text  x="143.68" y="175.5" ></text>
</g>
<g >
<title>raxStop (10 samples, 0.03%)</title><rect x="391.6" y="117" width="0.3" height="15.0" fill="rgb(234,0,45)" rx="2" ry="2" />
<text  x="394.60" y="127.5" ></text>
</g>
<g >
<title>je_malloc (59 samples, 0.16%)</title><rect x="515.4" y="37" width="1.8" height="15.0" fill="rgb(211,215,34)" rx="2" ry="2" />
<text  x="518.36" y="47.5" ></text>
</g>
<g >
<title>string2ll (19 samples, 0.05%)</title><rect x="942.6" y="101" width="0.6" height="15.0" fill="rgb(220,38,44)" rx="2" ry="2" />
<text  x="945.61" y="111.5" ></text>
</g>
<g >
<title>raxStart (60 samples, 0.16%)</title><rect x="389.7" y="117" width="1.9" height="15.0" fill="rgb(216,222,3)" rx="2" ry="2" />
<text  x="392.70" y="127.5" ></text>
</g>
<g >
<title>intrev64 (234 samples, 0.63%)</title><rect x="446.7" y="69" width="7.4" height="15.0" fill="rgb(220,195,34)" rx="2" ry="2" />
<text  x="449.68" y="79.5" ></text>
</g>
<g >
<title>lpGet (74 samples, 0.20%)</title><rect x="797.9" y="101" width="2.4" height="15.0" fill="rgb(252,19,8)" rx="2" ry="2" />
<text  x="800.95" y="111.5" ></text>
</g>
<g >
<title>getDecodedObject (41 samples, 0.11%)</title><rect x="645.4" y="37" width="1.3" height="15.0" fill="rgb(207,80,25)" rx="2" ry="2" />
<text  x="648.38" y="47.5" ></text>
</g>
<g >
<title>decrRefCount (25 samples, 0.07%)</title><rect x="1002.9" y="133" width="0.8" height="15.0" fill="rgb(239,203,26)" rx="2" ry="2" />
<text  x="1005.87" y="143.5" ></text>
</g>
<g >
<title>dictFreeUnlinkedEntry (622 samples, 1.67%)</title><rect x="158.8" y="133" width="19.8" height="15.0" fill="rgb(228,9,10)" rx="2" ry="2" />
<text  x="161.82" y="143.5" ></text>
</g>
<g >
<title>__libc_start_call_main (32,987 samples, 88.80%)</title><rect x="130.6" y="293" width="1047.8" height="15.0" fill="rgb(211,141,31)" rx="2" ry="2" />
<text  x="133.55" y="303.5" >__libc_start_call_main</text>
</g>
<g >
<title>dictEncObjKeyCompare (326 samples, 0.88%)</title><rect x="636.3" y="53" width="10.4" height="15.0" fill="rgb(244,119,7)" rx="2" ry="2" />
<text  x="639.32" y="63.5" ></text>
</g>
<g >
<title>trackingHandlePendingKeyInvalidations (60 samples, 0.16%)</title><rect x="958.4" y="133" width="1.9" height="15.0" fill="rgb(213,168,2)" rx="2" ry="2" />
<text  x="961.40" y="143.5" ></text>
</g>
<g >
<title>evictClients (18 samples, 0.05%)</title><rect x="284.2" y="149" width="0.6" height="15.0" fill="rgb(212,66,51)" rx="2" ry="2" />
<text  x="287.23" y="159.5" ></text>
</g>
<g >
<title>je_malloc (168 samples, 0.45%)</title><rect x="731.8" y="101" width="5.3" height="15.0" fill="rgb(243,2,24)" rx="2" ry="2" />
<text  x="734.78" y="111.5" ></text>
</g>
<g >
<title>zfree (806 samples, 2.17%)</title><rect x="1139.8" y="117" width="25.6" height="15.0" fill="rgb(206,223,2)" rx="2" ry="2" />
<text  x="1142.78" y="127.5" >z..</text>
</g>
<g >
<title>je_malloc_usable_size (379 samples, 1.02%)</title><rect x="492.2" y="53" width="12.1" height="15.0" fill="rgb(237,125,36)" rx="2" ry="2" />
<text  x="495.23" y="63.5" ></text>
</g>
<g >
<title>expireIfNeeded (17 samples, 0.05%)</title><rect x="226.9" y="165" width="0.6" height="15.0" fill="rgb(249,173,33)" rx="2" ry="2" />
<text  x="229.93" y="175.5" ></text>
</g>
<g >
<title>je_realloc (29 samples, 0.08%)</title><rect x="560.1" y="37" width="0.9" height="15.0" fill="rgb(226,205,42)" rx="2" ry="2" />
<text  x="563.09" y="47.5" ></text>
</g>
<g >
<title>dictSdsHash (64 samples, 0.17%)</title><rect x="772.8" y="85" width="2.1" height="15.0" fill="rgb(254,13,23)" rx="2" ry="2" />
<text  x="775.82" y="95.5" ></text>
</g>
<g >
<title>je_malloc_usable_size (320 samples, 0.86%)</title><rect x="163.1" y="117" width="10.2" height="15.0" fill="rgb(205,135,28)" rx="2" ry="2" />
<text  x="166.11" y="127.5" ></text>
</g>
<g >
<title>listAddNodeTail (431 samples, 1.16%)</title><rect x="689.1" y="85" width="13.7" height="15.0" fill="rgb(235,187,27)" rx="2" ry="2" />
<text  x="692.09" y="95.5" ></text>
</g>
<g >
<title>je_malloc (186 samples, 0.50%)</title><rect x="486.3" y="53" width="5.9" height="15.0" fill="rgb(231,8,28)" rx="2" ry="2" />
<text  x="489.33" y="63.5" ></text>
</g>
<g >
<title>hasActiveChildProcess (36 samples, 0.10%)</title><rect x="727.4" y="101" width="1.1" height="15.0" fill="rgb(226,148,28)" rx="2" ry="2" />
<text  x="730.40" y="111.5" ></text>
</g>
<g >
<title>je_malloc_usable_size (394 samples, 1.06%)</title><rect x="737.1" y="101" width="12.5" height="15.0" fill="rgb(214,12,47)" rx="2" ry="2" />
<text  x="740.12" y="111.5" ></text>
</g>
<g >
<title>commandTimeSnapshot (9 samples, 0.02%)</title><rect x="383.5" y="117" width="0.3" height="15.0" fill="rgb(227,31,44)" rx="2" ry="2" />
<text  x="386.47" y="127.5" ></text>
</g>
<g >
<title>dictAddRaw (2,707 samples, 7.29%)</title><rect x="601.2" y="85" width="86.0" height="15.0" fill="rgb(214,159,14)" rx="2" ry="2" />
<text  x="604.22" y="95.5" >dictAddRaw</text>
</g>
<g >
<title>zmalloc (545 samples, 1.47%)</title><rect x="581.3" y="53" width="17.3" height="15.0" fill="rgb(207,77,46)" rx="2" ry="2" />
<text  x="584.31" y="63.5" ></text>
</g>
<g >
<title>intrev64 (18 samples, 0.05%)</title><rect x="1026.5" y="149" width="0.5" height="15.0" fill="rgb(231,114,16)" rx="2" ry="2" />
<text  x="1029.47" y="159.5" ></text>
</g>
<g >
<title>dictEncObjHash (64 samples, 0.17%)</title><rect x="606.9" y="69" width="2.0" height="15.0" fill="rgb(209,72,35)" rx="2" ry="2" />
<text  x="609.88" y="79.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (93 samples, 0.25%)</title><rect x="203.7" y="149" width="3.0" height="15.0" fill="rgb(227,166,25)" rx="2" ry="2" />
<text  x="206.74" y="159.5" ></text>
</g>
<g >
<title>releaseBlockedEntry (1,640 samples, 4.41%)</title><rect x="966.8" y="165" width="52.1" height="15.0" fill="rgb(225,52,30)" rx="2" ry="2" />
<text  x="969.78" y="175.5" >relea..</text>
</g>
<g >
<title>dictObjectDestructor (8 samples, 0.02%)</title><rect x="178.6" y="133" width="0.2" height="15.0" fill="rgb(212,133,51)" rx="2" ry="2" />
<text  x="181.58" y="143.5" ></text>
</g>
<g >
<title>listNext (71 samples, 0.19%)</title><rect x="1174.8" y="181" width="2.3" height="15.0" fill="rgb(212,17,33)" rx="2" ry="2" />
<text  x="1177.82" y="191.5" ></text>
</g>
<g >
<title>je_malloc_usable_size (131 samples, 0.35%)</title><rect x="693.1" y="69" width="4.2" height="15.0" fill="rgb(238,43,42)" rx="2" ry="2" />
<text  x="696.12" y="79.5" ></text>
</g>
</g>
</svg>
